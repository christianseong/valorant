{"remainingRequest":"C:\\Users\\lol\\Desktop\\pressserver\\press\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lol\\Desktop\\pressserver\\press\\src\\components\\Admin\\Article.vue?vue&type=style&index=1&id=6067c9ff&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\lol\\Desktop\\pressserver\\press\\src\\components\\Admin\\Article.vue","mtime":1622600227788},{"path":"C:\\Users\\lol\\Desktop\\pressserver\\press\\node_modules\\css-loader\\dist\\cjs.js","mtime":1617667260694},{"path":"C:\\Users\\lol\\Desktop\\pressserver\\press\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1620819762298},{"path":"C:\\Users\\lol\\Desktop\\pressserver\\press\\node_modules\\postcss-loader\\src\\index.js","mtime":1617667260946},{"path":"C:\\Users\\lol\\Desktop\\pressserver\\press\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617667255123},{"path":"C:\\Users\\lol\\Desktop\\pressserver\\press\\node_modules\\vue-loader\\lib\\index.js","mtime":1620819762298}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KQGltcG9ydCB1cmwoIi4uLy4uL2Fzc2V0cy9jc3MvdW5pZnkuY3NzIik7DQo="},{"version":3,"sources":["Article.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA","file":"Article.vue","sourceRoot":"src/components/Admin","sourcesContent":["<template>\r\n<div class=\"Article\">\r\n    <v-row class=\"my-5\">\r\n        <v-col cols=\"12\">\r\n            <p class=\"titleSubText\">기사관리</p>\r\n        </v-col>\r\n    </v-row>\r\n    \r\n    <v-row no-gutters>\r\n        <v-col class=\"black py-3\" cols=\"10\">\r\n            <p style=\"color:white; border-right:1px solid white;\" class=\"listTitleText\">제목</p>\r\n        </v-col>\r\n        <v-col class=\"black py-3\" cols=\"2\">\r\n            <p style=\"color:white;\" class=\"listTitleText\">날짜</p>\r\n        </v-col>\r\n    </v-row>\r\n\r\n    <v-row no-gutters v-for=\"(i,index) in boards\" :key=\"index\">\r\n        <v-col class=\"blue\" cols=\"10\">\r\n            <p @click=\"clickTitle(index)\" style=\"overflow:hidden;\" class=\"newsSubText\">{{i.title}}</p>\r\n        </v-col>\r\n        <v-col class=\"blue lighten-2\" cols=\"2\">\r\n            <p class=\"newsSubText\">{{i.regTime.slice(0,10)}}</p>\r\n        </v-col>\r\n    </v-row>\r\n\r\n    <v-row>\r\n        <v-col class=\"d-flex justify-end\" cols=\"12\">\r\n            <v-btn to=\"/admin/write\">글쓰기</v-btn>\r\n        </v-col>\r\n    </v-row>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { Jodit } from 'jodit'\r\nimport 'jodit/build/jodit.min.css'\r\nexport default {\r\n    mounted() {\r\n        this.$store.dispatch('get_board_find');\r\n         var uploadOptions = {\r\n                enableDragAndDropFileToEditor: true,\r\n                uploader: {\r\n                    url: 'file/upload',\r\n                    isSuccess: function (resp) {\r\n                        return resp;\r\n                    },\r\n                    process: function (resp) {                       \r\n                        return {\r\n                            files: resp.data.files,\r\n                            path: resp.data.path,\r\n                            baseurl: resp.data.baseurl,\r\n                            error: resp.data.error,\r\n                            message: resp.data.message\r\n                        }\r\n                    },\r\n                    defaultHandlerSuccess: function (data) {\r\n                        var i, field = 'files';                      \r\n                        if (data[field] && data[field].length) {\r\n                            for (i = 0; i < data[field].length; i += 1) {\r\n                                this.selection.insertImage(data.baseurl + data[field][i]);\r\n                            }\r\n                        }\r\n                    },\r\n                }\r\n            }\r\n        const editor = new Jodit('#editor',uploadOptions)\r\n        editor.value = ''\r\n    },\r\n    computed:{\r\n        aDrawerBool:{\r\n            get(){\r\n                return this.$store.state.Admin.aDrawerBool;\r\n            },\r\n            set(bool){\r\n                this.$store.commit('set_aDrawerBool',bool);\r\n            },\r\n        },\r\n        boards(){\r\n            return this.$store.state.Board.boards;\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n.Write .v-text-field.v-text-field--solo:not(.v-text-field--solo-flat) > .v-input__control > .v-input__slot{\r\n    box-shadow: none;\r\n}\r\n</style>\r\n\r\n<style scoped>\r\n@import url(\"../../assets/css/unify.css\");\r\n</style>"]}]}